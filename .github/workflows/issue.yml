name: Adjust file configuration

on:
  issues:
    types: opened
  issue_comment:
    types: created

jobs:
  greet:
    name: Greet with info
    runs-on: ubuntu-latest
    if: github.event.issue && startsWith(github.event.issue.title, 'Config')
    steps:
      - name: fetch
        id: fetch-current-state
        run: echo "current=blah" >> "$GITHUB_OUTPUT"
      - name: comment with current
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `Current state: ${{ steps.fetch-current-state.outputs.current }}.\n If you wish to change this, comment with '.config set <new state>'`
            })
  config:
    if: github.event.comment && startsWith(github.event.comment.body, '.config set')
    name: Set config
    runs-on: ubuntu-latest
    steps:
      - name: parse-config-value
        id: parse-config-value
        run: |
          value=$(echo "${{ github.event.comment.body }}" | sed -e 's/\.config set //')
          echo "value=$value" >> "$GITHUB_OUTPUT"
      - name: validate value
        id: validate-value
        env:
          stepvalue: ${{ steps.parse-config-value.outputs.value }}
        run: |
          testvalue="${{ env.stepvalue }}"
          # make sure that the testvalue is valid and safe (does not contain spaces, etc)
          if [[ $testvalue =~ ^[a-zA-Z0-9]+$ ]]; then
            echo "value=$testvalue" >> "$GITHUB_OUTPUT"
          else
            echo "invalid value set: $testvalue"
            exit 1
          fi

      - name: ssh and apply
        run: echo "this is where ssh would happen or api call to set a value to ${{ steps.validate-value.outputs.value }}"
      - name: Comment back to user
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `Config set to ${process.env.value}`
            })
  failure:
    needs: [greet, config]
    if: failure()
    runs-on: ubuntu-latest
    steps:
      - name: comment with error
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `Something went wrong. Please try again.`
            })
