# This is an example GitHub Actions workflow that will trigger when an issue is opened.
# When the issue is opened, this workflow will:
#   - Assign the issue to the person who opened it
#   - Add a label
#   - Comment on the issue with an @mention to the person who created the issue

name: New issue

on:
  issues:
    types: [opened, reopened]

jobs:
  new-issue-bug:
    if: startsWith(github.event.issue.title, '[Bug]') || contains(github.event.issue.labels.*.name, 'bug')
    runs-on: ubuntu-latest

    permissions:
      issues: write

    steps:
      - name: Assign to issue creator
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.issues.addAssignees({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              assignees: ['${{ github.actor }}']
            })

      - name: Add label
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.issues.addLabels({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: ['bug']
            })

      - name: Comment
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'Thanks for opening this issue, @${{ github.actor }}! A contributor should be by to address your issue soon.'
            })

  # Run the deployment workflow when the issue title starts with '[Deploy]'
  deploy-set-parameters:
    runs-on: ubuntu-latest
    name: Set Parameters
    if: startsWith(github.event.issue.title, '[Deploy]')
    outputs:
      environment: ${{ fromJson(steps.set-parameters.outputs.result).environment }}
      version: ${{ fromJson(steps.set-parameters.outputs.result).version }}
    steps:
      # Drop a comment in the issue with a link to the Actions workflow run
      - name: Start Comment
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'Deployment started. See the workflow run here: ' + context.payload.workflow_run.html_url
            })

      - name: Set Parameters
        id: set-parameters
        uses: actions/github-script@v6
        with:
          script: |
            let issueBody = context.payload.issue.body;
            console.log(issueBody);
            let version = issueBody.match(/(?<=Version: ).*/g);
            //let environment = issueBody.match(/### Environments\n((.|\n)*)###/g)[0].match(/(?<=- \[x\] ).*/g);
            //environment = environment.map(env => env.toLowerCase());

            //console.log(`environment: ${environment}`);

            let result = {
              environment: 'development,staging',
              version: 'main'
            };

            console.log(result);
            return result;

  deploy-run:
    needs: deploy-set-parameters
    uses: ./.github/workflows/run-deploy.yml
    with:
      environment: ${{ needs.deploy-set-parameters.outputs.environment }}
      version: ${{ needs.deploy-set-parameters.outputs.version }}
